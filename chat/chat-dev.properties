#Actuator
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

#Log
logging.level.com.example.chat=DEBUG

#RabbitMQ
spring.rabbitmq.host=${RABBIT_MQ_HOST:localhost}
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#DB
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/chat
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true

spring.liquibase.change-log=classpath:db/liquibase/master.xml
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy


#Eureka
eureka.client.service-url.defaultZone = http://${EUREKA_HOST:localhost}:8761/eureka/
eureka.instance.metadataMap.zone = zone1
eureka.client.preferSameZoneEureka = true
eureka.client.healthcheck.enabled = true
eureka.instance.prefer-ip-address = true

#Resilience4j

#Circuitbreaker
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=1000

#Retry
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=10s
resilience4j.retry.configs.default.enable-exponential-backoff=true
resilience4j.retry.configs.default.exponential-backoff-multiplier=2

#Ratelimiter
resilience4j.ratelimiter.configs.default.timeout-duration=1000
resilience4j.ratelimiter.configs.default.limit-refresh-period=5000
resilience4j.ratelimiter.configs.default.limit-for-period=1

#Redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=6379


spring.hazelcast.network.join.multicast.enabled=false
spring.hazelcast.network.join.tcp-ip.enabled=true
spring.hazelcast.network.join.tcp-ip.members=hazelcast

HAZELCAST_HOST=${HAZELCAST_HOST_VALUE:localhost}


# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus

# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]